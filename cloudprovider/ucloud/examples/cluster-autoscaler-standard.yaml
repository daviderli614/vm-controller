#UCloud Cluster Autoscaler
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-addon: cluster-autoscaler.addons.k8s.io
    k8s-app: cluster-autoscaler
  name: cluster-autoscaler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: cluster-autoscaler
  labels:
    k8s-addon: cluster-autoscaler.addons.k8s.io
    k8s-app: cluster-autoscaler
rules:
  - apiGroups: [""]
    resources: ["events","endpoints"]
    verbs: ["create", "patch"]
  - apiGroups: [""]
    resources: ["pods/eviction"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["pods/status"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["endpoints"]
    resourceNames: ["cluster-autoscaler"]
    verbs: ["get","update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["watch","list","get","update"]
  - apiGroups: [""]
    resources: ["pods","services","replicationcontrollers","persistentvolumeclaims","persistentvolumes"]
    verbs: ["watch","list","get"]
  - apiGroups: ["extensions"]
    resources: ["replicasets","daemonsets"]
    verbs: ["watch","list","get"]
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["watch","list"]
  - apiGroups: ["apps"]
    resources: ["statefulsets","replicasets","daemonsets"]
    verbs: ["watch","list","get"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses","csinodes"]
    verbs: ["watch","list","get"]
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["watch", "list", "get"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: cluster-autoscaler
  namespace: kube-system
  labels:
    k8s-addon: cluster-autoscaler.addons.k8s.io
    k8s-app: cluster-autoscaler
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["cluster-autoscaler-status", "cluster-autoscaler-priority-expander"]
    verbs: ["delete","get","update","watch"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: cluster-autoscaler
  labels:
    k8s-addon: cluster-autoscaler.addons.k8s.io
    k8s-app: cluster-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-autoscaler
subjects:
  - kind: ServiceAccount
    name: cluster-autoscaler
    namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: cluster-autoscaler
  namespace: kube-system
  labels:
    k8s-addon: cluster-autoscaler.addons.k8s.io
    k8s-app: cluster-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cluster-autoscaler
subjects:
  - kind: ServiceAccount
    name: cluster-autoscaler
    namespace: kube-system

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-autoscaler
  namespace: kube-system
  labels:
    app: cluster-autoscaler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-autoscaler
  template:
    metadata:
      labels:
        app: cluster-autoscaler
    spec:
      priorityClassName: system-cluster-critical
      serviceAccountName: cluster-autoscaler
      containers:
        - image: {{CLUSTER_AUTOSCALER_IMAGE}}
          name: cluster-autoscaler
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 300Mi
          command:
            - ./cluster-autoscaler
            - --v=4
            - --stderrthreshold=info
            - --cloud-provider=ucloud
            - --cloud-config=/etc/kubernetes/ucloud
            - --scan-interval=30s
            #- --nodes={{NODES}}
            #- --scale-down-utilization-threshold={{SCALE_DOWN_UTILIZATION-THRESHOLD}}
            #- --scale-down-unneeded-time={{SCALE_DOWN_UNNEEDED_TIME}}
            #- --scale-down-delay-after-add={{SCALE_DOWN_DELAY_AFTER_ADD}}
            #- --scale-down-enabled={{SCALE_DOWN_ENABLED}}
          imagePullPolicy: "Always"
          env:
            - name: UCLOUD_UK8S_CLUSTER_ID
              value: "{{CLUSTER_ID}}"
          volumeMounts:
            - name: resolv
              mountPath: /etc/resolv.conf
              readOnly: true
            - name: cloudconfig
              mountPath: /etc/kubernetes/ucloud
              readOnly: true
      volumes:
        - name: resolv
          hostPath:
            path: "/etc/resolv.conf"
        - name: cloudconfig
          hostPath:
            path: "/etc/kubernetes/ucloud"